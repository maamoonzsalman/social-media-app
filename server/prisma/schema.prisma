generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  firstName String
  lastName  String
  email     String   @unique
  createdAt DateTime @default(now())
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  sessions  Session[] // Add relation to sessions

  // Add fields for following and followers
  following Follows[] @relation("following")
  followers Follows[] @relation("followers")
}

model Post {
  id        Int      @id @default(autoincrement())
  image     String
  caption   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Session {
  id        Int      @id @default(autoincrement())
  sid       String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
  data      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Follow relation table
model Follows {
  id            Int    @id @default(autoincrement())
  
  // The user who is following another user
  followerId    Int
  follower      User   @relation("following", fields: [followerId], references: [id])

  // The user who is being followed
  followingId   Int
  following     User   @relation("followers", fields: [followingId], references: [id])

  createdAt     DateTime @default(now())

  @@unique([followerId, followingId]) // Ensure a user can't follow another user more than once
}
